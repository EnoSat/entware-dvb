--- a/globals.h
+++ b/globals.h
@@ -366,6 +366,9 @@ typedef unsigned char uchar;
 #ifndef CS_SVN_VERSION
 #   define CS_SVN_VERSION "test"
 #endif
+#ifndef CS_EMU_VERSION
+#   define CS_EMU_VERSION "000"
+#endif
 #ifndef CS_TARGET
 #   define CS_TARGET "unknown"
 #endif
--- a/Makefile
+++ b/Makefile
@@ -5,7 +5,8 @@ SHELL = /bin/sh
 .PHONY: all tests help README.build README.config simple default debug config menuconfig allyesconfig allnoconfig defconfig clean distclean
 
 VER     := $(shell ./config.sh --oscam-version)
-SVN_REV := $(shell ./config.sh --oscam-revision)
+#SVN_REV := $(shell ./config.sh --oscam-revision)
+#EMU_REV := 000
 
 uname_S := $(shell sh -c 'uname -s 2>/dev/null || echo not')
 
@@ -35,7 +36,7 @@ ifdef USE_SSL
 	override USE_LIBCRYPTO=1
 endif
 
-CONF_DIR = /usr/local/etc
+CONF_DIR = /opt/etc/oscam
 
 LIB_PTHREAD = -lpthread
 LIB_DL = -ldl
@@ -52,6 +53,7 @@ endif
 
 override STD_LIBS := -lm $(LIB_PTHREAD) $(LIB_DL) $(LIB_RT)
 override STD_DEFS := -D'CS_SVN_VERSION="$(SVN_REV)"'
+override STD_DEFS += -D'CS_EMU_VERSION="$(EMU_REV)"'
 override STD_DEFS += -D'CS_CONFDIR="$(CONF_DIR)"'
 
 # Compiler warnings
--- a/module-dvbapi.c
+++ b/module-dvbapi.c
@@ -533,7 +533,7 @@ int32_t dvbapi_net_send(uint32_t request
 			if (cfg.dvbapi_extended_cw_api == 2)
 			  strcat(capabilities, ",e2");
 
-			*info_len = snprintf((char *) &packet[size], sizeof(packet) - size, "OSCam v%s, build r%s (%s); %s", CS_VERSION, CS_SVN_VERSION, CS_TARGET, capabilities + 1);
+			*info_len = snprintf((char *) &packet[size], sizeof(packet) - size, "OSCam v%s, build r%s + EMU r%s (%s); %s", CS_VERSION, CS_SVN_VERSION, CS_EMU_VERSION, CS_TARGET, capabilities + 1);
 			size += *info_len;
 			break;
 		}
--- a/module-lcd.c
+++ b/module-lcd.c
@@ -81,6 +81,7 @@ static void refresh_lcd_file(void)
 
 			fprintf(fpsave, "Version: %s\n", CS_VERSION);
 			fprintf(fpsave, "Revision: %s\n", CS_SVN_VERSION);
+			fprintf(fpsave, "EMU rev.: %s\n", CS_EMU_VERSION);
 			if(days == 0)
 				{ fprintf(fpsave, "up: %02d:%02d:%02d\n", hours, mins, secs); }
 			else
--- a/oscam.c
+++ b/oscam.c
@@ -144,7 +144,7 @@ static void show_usage(void)
 		   "| | | \\___ \\| |  / _` | '_ ` _ \\\n"
 		   "| |_| |___) | |_| (_| | | | | | |\n"
 		   " \\___/|____/ \\___\\__,_|_| |_| |_|\n\n");
-	printf("OSCam cardserver v%s, build r%s (%s)\n", CS_VERSION, CS_SVN_VERSION, CS_TARGET);
+	printf("OSCam cardserver v%s, build r%s + EMU r%s (%s)\n", CS_VERSION, CS_SVN_VERSION, CS_EMU_VERSION, CS_TARGET);
 	printf("Copyright (C) 2009-2015 OSCam developers.\n");
 	printf("This program is distributed under GPLv3.\n");
 	printf("OSCam is based on Streamboard mp-cardserver v0.9d written by dukat\n");
@@ -376,6 +376,7 @@ static void write_versionfile(bool use_s
 	}
 
 	fprintf(fp, "Version:        oscam-%s-r%s\n", CS_VERSION, CS_SVN_VERSION);
+	fprintf(fp, "EMU:            r%s\n", CS_EMU_VERSION);
 	fprintf(fp, "Compiler:       %s\n", CS_TARGET);
 	fprintf(fp, "Box type:       %s (%s)\n", boxtype_get(), boxname_get());
 	fprintf(fp, "PID:            %d\n", getppid());
@@ -634,7 +635,7 @@ static void cs_dumpstack(int32_t sig)
 
 	fprintf(stderr, "crashed with signal %d on %swriting oscam.crash\n", sig, buf);
 
-	fprintf(fp, "%sOSCam cardserver v%s, build r%s (%s)\n", buf, CS_VERSION, CS_SVN_VERSION, CS_TARGET);
+	fprintf(fp, "%sOSCam cardserver v%s, build r%s + EMU r%s (%s)\n", buf, CS_VERSION, CS_SVN_VERSION, CS_EMU_VERSION, CS_TARGET);
 	fprintf(fp, "FATAL: Signal %d: %s Fault. Logged StackTrace:\n\n", sig, (sig == SIGSEGV) ? "Segmentation" : ((sig == SIGBUS) ? "Bus" : "Unknown"));
 	fclose(fp);
 
--- a/oscam-conf.c
+++ b/oscam-conf.c
@@ -509,8 +509,8 @@ FILE *create_config_file(const char *con
 		cs_log("ERROR: Cannot create file \"%s\" (errno=%d %s)", temp_file, errno, strerror(errno));
 		return NULL;
 	}
-	fprintf(f, "# %s generated automatically by Streamboard OSCAM %s SVN r%s\n",
-			conf_filename, CS_VERSION, CS_SVN_VERSION);
+	fprintf(f, "# %s generated automatically by Streamboard OSCAM %s SVN r%s + EMU r%s\n",
+			conf_filename, CS_VERSION, CS_SVN_VERSION, CS_EMU_VERSION);
 	fprintf(f, "# Read more: http://www.streamboard.tv/svn/oscam/trunk/Distribution/doc/txt/%s.txt\n\n",
 			conf_filename);
 	return f;
--- a/oscam-log.c
+++ b/oscam-log.c
@@ -232,7 +232,7 @@ int32_t cs_open_logfiles(void)
 	// according to syslog docu: calling closelog is not necessary and calling openlog multiple times is safe
 	// We use openlog to set the default syslog settings so that it's possible to allow switching syslog on and off
 	openlog(syslog_ident, LOG_NDELAY | LOG_PID, LOG_DAEMON);
-	cs_log(">> OSCam <<  cardserver %s, version " CS_VERSION ", build r" CS_SVN_VERSION " (" CS_TARGET ")", starttext);
+	cs_log(">> OSCam <<  cardserver %s, version " CS_VERSION ", build r" CS_SVN_VERSION " + EMU r" CS_EMU_VERSION " (" CS_TARGET ")", starttext);
 
 	return (fp <= (FILE *)0);
 }
